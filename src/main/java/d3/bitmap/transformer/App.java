/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package d3.bitmap.transformer;

import java.io.IOException;
import java.util.Arrays;

public class App {
    public String getGreeting() {
        return "Hello world.";


    }

    public static bitMapImage readBMPImage(String filePath) {

        bitMapImage output = null;
        try {
            output = new bitMapImage(filePath);
        } catch (IOException e) {
            System.out.println("I am so very sorry, your file could not be found. Please, fix it and try again.");
            e.printStackTrace();
        }

        return output;
    }


    public static void main(String[] args) {
        System.out.println(Arrays.toString(args));


        if (args.length != 3) {
            System.out.println("Please try again, giving the target input image, output image spot, and transform to use.");
            System.out.println("Your transform options are: invert horizontal vertical fuzzy");
            return;
        }

        System.out.println(args[2]);


        bitMapImage image = readBMPImage(args[0]);

        if (args[2].equals("invert")) {
            System.out.println("Inverting image colors");
            image.invert();
        } else if (args[2].equals("horizontal")) {
            System.out.println("Flipping image horizontally");
            image.reverseImageHorizontal();
        } else if (args[2].equals("vertical")) {
            System.out.println("Flipping image vertically");
            image.reverseImageVertical();
        } else if (args[2].equals("fuzzy")) {
            System.out.println("Fuzzifying image...kinda?");
            image.fuzzifyQuestionMark();
        } else {
            System.out.println("Please try again, giving the target input image, output image spot, and transform to use.");
            System.out.println("Your transform options are: invert horizontal vertical fuzzy");
            return;
        }


        try {
            image.writeBitMapImage(args[1]);
        } catch (IOException e) {
            System.out.println("That system location could not be written to. Can you please give me different one?");
            e.printStackTrace();
        }


    }
}
